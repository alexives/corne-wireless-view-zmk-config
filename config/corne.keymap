/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB           &kp Q  &kp W  &kp E  &kp R     &kp T    &kp Y  &kp U      &kp I      &kp O    &kp P     &kp BSPC
&mt LCTRL ESCAPE  &kp A  &kp S  &kp D  &kp F     &kp G    &kp H  &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT         &kp Z  &kp X  &kp C  &kp V     &kp B    &kp N  &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RET
                                &mo 3  &kp LGUI  &mo 1    &mo 2  &kp SPACE  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&trans  &trans        &kp AT        &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LG(LEFT_BRACKET)    &kp LG(RIGHT_BRACKET)  &kp BACKSLASH  &kp EXCLAMATION  &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3    &kp NUMBER_4     &kp NUMBER_5            &kp NUMBER_6           &kp NUMBER_7   &kp NUMBER_8     &kp NUMBER_9  &kp NUMBER_0  &kp GRAVE
&trans  &kp F1        &kp F2        &kp F3          &kp F4           &kp F5                  &kp F6                 &kp F7         &kp F8           &kp F9        &kp F10       &trans
                                    &kp LGUI        &trans           &kp SPACE               &kp RET                &trans         &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&trans  &trans     &kp DOLLAR  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LG(LEFT_BRACE)    &kp LG(RIGHT_BRACE)  &kp PIPE   &kp AMPERSAND  &trans                &trans                 &trans
&trans  &kp MINUS  &kp EQUAL   &kp HASH          &kp PLUS           &kp PERCENT           &kp CARET            &kp UNDER  &kp ASTRK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp TILDE
&trans  &kp F11    &kp F12     &kp F13           &kp F14            &kp F15               &kp F16              &kp F17    &kp F18        &kp F19               &kp F20                &trans
                               &trans            &trans             &trans                &trans               &trans     &trans
            >;
        };

        nav_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2             &bt BT_SEL 3             &bt BT_SEL 4               &trans        &trans            &trans  &trans     &trans  &trans
&trans      &trans        &trans        &kp LS(LA(LC(LG(F12))))  &kp LS(LA(LC(LG(F11))))  &kp LG(LC(LA(LS(F10))))    &kp LEFT      &kp DOWN          &kp UP  &kp RIGHT  &trans  &trans
&trans      &trans        &trans        &trans                   &trans                   &trans                     &trans        &trans            &trans  &trans     &trans  &trans
                                        &trans                   &trans                   &trans                     &kp LEFT_ALT  &kp LEFT_COMMAND  &trans
            >;
        };
    };
};
